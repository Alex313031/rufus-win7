# wimlib (https://wimlib.net/)

import("//build/config/precompiled_header.gni")
import("//build/config/static_shared.gni")

# Open source Windows Imaging (WIM) library
static_library("wimlib") {
  configs -= [ "//build/config/win:nominmax", ]
  configs += [ ":wimlib_config" ]

  sources = [
    "config.h",
    "wimlib.h",
    "wimlib\alloca.h",
    "wimlib\apply.h",
    "wimlib\assert.h",
    "wimlib\avl_tree.h",
    "wimlib\bitops.h",
    "wimlib\blob_table.h",
    "wimlib\bt_matchfinder.h",
    "wimlib\case.h",
    "wimlib\chunk_compressor.h",
    "wimlib\compiler.h",
    "wimlib\compressor_ops.h",
    "wimlib\compress_common.h",
    "wimlib\cpu_features.h",
    "wimlib\decompressor_ops.h",
    "wimlib\decompress_common.h",
    "wimlib\dentry.h",
    "wimlib\divsufsort.h",
    "wimlib\encoding.h",
    "wimlib\endianness.h",
    "wimlib\error.h",
    "wimlib\file_io.h",
    "wimlib\glob.h",
    "wimlib\guid.h",
    "wimlib\hc_matchfinder.h",
    "wimlib\header.h",
    "wimlib\inode.h",
    "wimlib\inode_table.h",
    "wimlib\integrity.h",
    "wimlib\lcpit_matchfinder.h",
    "wimlib\list.h",
    "wimlib\lzms_common.h",
    "wimlib\lzms_constants.h",
    "wimlib\lzx_common.h",
    "wimlib\lzx_constants.h",
    "wimlib\matchfinder_common.h",
    "wimlib\metadata.h",
    "wimlib\ntfs_3g.h",
    "wimlib\object_id.h",
    "wimlib\pathlist.h",
    "wimlib\paths.h",
    "wimlib\pattern.h",
    "wimlib\progress.h",
    "wimlib\registry.h",
    "wimlib\reparse.h",
    "wimlib\resource.h",
    "wimlib\scan.h",
    "wimlib\security.h",
    "wimlib\security_descriptor.h",
    "wimlib\sha1.h",
    "wimlib\solid.h",
    "wimlib\tagged_items.h",
    "wimlib\test_support.h",
    "wimlib\textfile.h",
    "wimlib\threads.h",
    "wimlib\timestamp.h",
    "wimlib\types.h",
    "wimlib\unaligned.h",
    "wimlib\unix_data.h",
    "wimlib\util.h",
    "wimlib\wim.h",
    "wimlib\wimboot.h",
    "wimlib\win32.h",
    "wimlib\win32_common.h",
    "wimlib\win32_vss.h",
    "wimlib\wof.h",
    "wimlib\write.h",
    "wimlib\xattr.h",
    "wimlib\xml.h",
    "wimlib\xmlproc.h",
    "wimlib\xml_windows.h",
    "wimlib\xpress_constants.h",
    "wimlib_tchar.h",
  ]

  sources += [
    "avl_tree.c",
    "blob_table.c",
    "compress.c",
    "compress_common.c",
    "compress_parallel.c",
    "compress_serial.c",
    "cpu_features.c",
    "decompress.c",
    "decompress_common.c",
    "dentry.c",
    "divsufsort.c",
    "encoding.c",
    "error.c",
    "export_image.c",
    "extract.c",
    "file_io.c",
    "header.c",
    "inode.c",
    "inode_fixup.c",
    "inode_table.c",
    "integrity.c",
    "iterate_dir.c",
    "lcpit_matchfinder.c",
    "lzms_common.c",
    "lzms_compress.c",
    "lzms_decompress.c",
    "lzx_common.c",
    "lzx_compress.c",
    "lzx_decompress.c",
    "metadata_resource.c",
    "pathlist.c",
    "paths.c",
    "pattern.c",
    "progress.c",
    "registry.c",
    "reparse.c",
    "resource.c",
    "scan.c",
    "security.c",
    "sha1.c",
    "solid.c",
    "split.c",
    "tagged_items.c",
    "textfile.c",
    "threads.c",
    "timestamp.c",
    "update_image.c",
    "util.c",
    "wim.c",
    "wimboot.c",
    "win32_apply.c",
    "win32_capture.c",
    "win32_common.c",
    "win32_replacements.c",
    "win32_vss.c",
    "write.c",
    "xml.c",
    "xmlproc.c",
    "xml_windows.c",
    "xpress_compress.c",
    "xpress_decompress.c",
  ]

  public_deps = [ "../libcdio:libcdio", ]
}

config("wimlib_config") {
  configs = []

  cflags_c = [
    "/std:c17",
  ]

  cflags = [
    "-Wno-implicit-function-declaration",
  ]

  include_dirs = [
    "./",
    "../",
    "../libcdio",
    "../msvc-missing",
  ]

  defines = [
    "_RUFUS",
    "HAVE_CONFIG_H",
    "UNICODE",
    "_OFF_T_DEFINED",
    "_off_t=__int64",
    "off_t=_off_t",
    "_FILE_OFFSET_BITS=64",
    "__SSE2__",
  ]
}
