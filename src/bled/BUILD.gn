# Bled (Base Library for Easy Decompression)

import("//build/config/precompiled_header.gni")
import("//build/config/static_shared.gni")

# Library for rufus
static_library("bled") {
  configs -= [ "//build/config/win:nominmax", ]
  configs += [ ":bled_config" ]

  sources = [
    "bb_archive.h",
    "bled.h",
    "fse.h",
    "fse_bitstream.h",
    "huf.h",
    "libbb.h",
    "platform.h",
    "xxhash.h",
    "xz.h",
    "xz_config.h",
    "xz_lzma2.h",
    "xz_private.h",
    "xz_stream.h",
    "zstd.h",
    "zstd_bits.h",
    "zstd_compiler.h",
    "zstd_config.h",
    "zstd_cpu.h",
    "zstd_ddict.h",
    "zstd_decompress_block.h",
    "zstd_decompress_internal.h",
    "zstd_deps.h",
    "zstd_errors.h",
    "zstd_error_private.h",
    "zstd_internal.h",
    "zstd_mem.h",
  ]

  sources += [
    "bled.c",
    "crc32.c",
    "data_align.c",
    "data_extract_all.c",
    "data_skip.c",
    "decompress_bunzip2.c",
    "decompress_gunzip.c",
    "decompress_uncompress.c",
    "decompress_unlzma.c",
    "decompress_unxz.c",
    "decompress_unzip.c",
    "decompress_unzstd.c",
    "decompress_vtsi.c",
    "filter_accept_all.c",
    "filter_accept_list.c",
    "filter_accept_reject_list.c",
    "find_list_entry.c",
    "fse_decompress.c",
    "header_list.c",
    "header_skip.c",
    "header_verbose_list.c",
    "huf_decompress.c",
    "init_handle.c",
    "open_transformer.c",
    "seek_by_jump.c",
    "seek_by_read.c",
    "xxhash.c",
    "xz_dec_bcj.c",
    "xz_dec_lzma2.c",
    "xz_dec_stream.c",
    "zstd_common.c",
    "zstd_ddict.c",
    "zstd_decompress.c",
    "zstd_decompress_block.c",
    "zstd_entropy_common.c",
    "zstd_error_private.c",
  ]

  #public_deps = []
}

config("bled_config") {
  configs = []

  cflags = [
    "-Wno-undef",
    "-Wno-strict-aliasing",
  ]
  cflags += [
    "-Wno-implicit-function-declaration",
  ]

  include_dirs = [
    "./",
    "../",
  ]

  defines = [
    "_OFF_T_DEFINED",
    "_off_t=__int64",
    "off_t=_off_t",
    "_FILE_OFFSET_BITS=64",
  ]
  if (is_debug) {
    defines += [ "_CRTDBG_MAP_ALLOC", ]
  }

  libs = [
    "odbc32.lib",
    "odbccp32.lib",
  ]
}
